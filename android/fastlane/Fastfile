default_platform(:android)

platform :android do
  outputFolder = 'bundle_output'

  lane :build_android do |options|
    gradle(
      task: "bundle",
      properties: {
        "android.injected.version.code" => 10201,
        "android.injected.version.name" => 'bug fix',
      }
    )
    #sh("mkdir", "../#{outputFolder}")
    #dest = "#{outputFolder}/#1011_#1120_#CAP_android.aab"
    #sh("cp", lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH], '../'+dest)
    #destApk = "#{outputFolder}/#1011_#1120_#CAP_android.apk"
    #fastlane_require 'dotenv'
    #Dotenv.overload '../../.env'
    #bundletool(
    #  # ks_path: ENV['KS_PATH'],
    #  # ks_password: ENV['KS_PASS'],
    #  # ks_key_alias: ENV['KS_KEY_ALIAS'],
    #  # ks_key_alias_password: ENV['KS_KEY_ALIAS_PASS'],
    #  bundletool_version: '0.11.0',
    #  aab_path: dest,
    #  apk_output_path: destApk,
    #  verbose: true
    #)
  end

  #desc "Submit a new Beta Build to Crashlytics Beta"
  #lane :beta do
  #  gradle(task: "clean assembleRelease")
  #  crashlytics
  #
  #  # sh "your_script.sh"
  #  # You can also use other beta testing services here
  #end
#
  #desc "Deploy a new version to the Google Play"
  #lane :deploy do
  #  gradle(task: "clean assembleRelease")
  #  upload_to_play_store
  #end
end
